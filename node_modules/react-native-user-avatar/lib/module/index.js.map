{"version":3,"sources":["index.js"],"names":["UserAvatar","props","name","src","bgColor","bgColors","textColor","size","imageStyle","style","borderRadius","component","console","warn","parseInt","inner","setInner","then","isImage","propTypes","PropTypes","string","array","number","object","any","defaultProps"],"mappings":"oVAAA,qDACA,6DACA,yCACA,yCAKA,kC,kFADwB,CAOxB,GAAMA,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,IAE1BC,CAAAA,IAF0B,CAYxBD,KAZwB,CAE1BC,IAF0B,CAG1BC,GAH0B,CAYxBF,KAZwB,CAG1BE,GAH0B,CAI1BC,OAJ0B,CAYxBH,KAZwB,CAI1BG,OAJ0B,CAK1BC,QAL0B,CAYxBJ,KAZwB,CAK1BI,QAL0B,CAM1BC,SAN0B,CAYxBL,KAZwB,CAM1BK,SAN0B,CAO1BC,IAP0B,CAYxBN,KAZwB,CAO1BM,IAP0B,CAQ1BC,UAR0B,CAYxBP,KAZwB,CAQ1BO,UAR0B,CAS1BC,KAT0B,CAYxBR,KAZwB,CAS1BQ,KAT0B,CAU1BC,YAV0B,CAYxBT,KAZwB,CAU1BS,YAV0B,CAW1BC,SAX0B,CAYxBV,KAZwB,CAW1BU,SAX0B,CAe5B,GAAI,MAAQJ,CAAAA,IAAR,GAAkB,QAAtB,CAAgC,CAC9BK,OAAO,CAACC,IAAR,CAAa,8BAAb,EACAN,IAAI,CAAGO,QAAQ,CAACP,IAAD,CAAf,CACD,CAlB2B,cAoBF,oBACtB,6BAAC,sBAAD,EAAY,SAAS,CAAED,SAAvB,CAAkC,IAAI,CAAEC,IAAxC,CAA8C,IAAI,CAAEL,IAApD,gEADsB,CApBE,qDAoBrBa,KApBqB,eAoBdC,QApBc,eAwB5B,qBAAU,UAAM,CACd,GAAIL,SAAJ,CAAeK,QAAQ,CAAC,6BAAC,wBAAD,EAAc,IAAI,CAAET,IAApB,CAA0B,SAAS,CAAEI,SAArC,iEAAD,CAAR,CACf,GAAIR,GAAJ,CAAS,CACP,wBAAWA,GAAX,EAAgBc,IAAhB,CAAqB,SAACC,OAAD,CAAa,CAChC,GAAIA,OAAJ,CAAa,CACXF,QAAQ,CACJ,6BAAC,uBAAD,EAAa,GAAG,CAAEb,GAAlB,CAAuB,IAAI,CAAEI,IAA7B,CAAmC,UAAU,CAAEC,UAA/C,iEADI,CAAR,CAGD,CACF,CAND,EAOD,CACF,CAXD,CAWG,EAXH,EAaA,MACE,8BAAC,iBAAD,EAAM,KAAK,CAAE,CACX,qCAAwBN,IAAxB,CAA8BE,OAA9B,CAAuCC,QAAvC,CADW,CAEX,+BAAkBE,IAAlB,CAAwBJ,GAAxB,CAA6BO,YAA7B,CAFW,CAGXD,KAHW,CAAb,gEAKGM,KALH,CADF,CASD,CA9CD,CAgDAf,UAAU,CAACmB,SAAX,CAAuB,CACrBjB,IAAI,CAAEkB,mBAAUC,MADK,CAErBlB,GAAG,CAAEiB,mBAAUC,MAFM,CAGrBjB,OAAO,CAAEgB,mBAAUC,MAHE,CAIrBhB,QAAQ,CAAEe,mBAAUE,KAJC,CAKrBhB,SAAS,CAAEc,mBAAUC,MALA,CAMrBd,IAAI,CAAEa,mBAAUG,MANK,CAOrBf,UAAU,CAAEY,mBAAUI,MAPD,CAQrBf,KAAK,CAAEW,mBAAUI,MARI,CASrBd,YAAY,CAAEU,mBAAUG,MATH,CAUrBZ,SAAS,CAAES,mBAAUK,GAVA,CAAvB,CAaAzB,UAAU,CAAC0B,YAAX,CAA0B,CACxBnB,IAAI,CAAE,EADkB,CAExBD,SAAS,CAAE,MAFa,CAGxBJ,IAAI,CAAE,UAHkB,CAIxBG,QAAQ,CAAE,CACR,SADQ,CAER,SAFQ,CAGR,SAHQ,CAIR,SAJQ,CAKR,SALQ,CAMR,SANQ,CAOR,SAPQ,CAJc,CAA1B,C,aAeeL,U","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {View} from 'react-native';\nimport {\n  TextAvatar,\n  ImageAvatar,\n  CustomAvatar,\n} from './components/'; ;\nimport {\n  fetchImage,\n  getContainerStyle,\n  generateBackgroundStyle,\n} from './helpers';\n\nconst UserAvatar = (props) => {\n  let {\n    name,\n    src,\n    bgColor,\n    bgColors,\n    textColor,\n    size,\n    imageStyle,\n    style,\n    borderRadius,\n    component,\n  } = props;\n\n  // Validations\n  if (typeof (size) === 'string') {\n    console.warn('size prop should be a number');\n    size = parseInt(size);\n  }\n\n  const [inner, setInner] = useState(\n      <TextAvatar textColor={textColor} size={size} name={name} />,\n  );\n\n  useEffect(() => {\n    if (component) setInner(<CustomAvatar size={size} component={component} />);\n    if (src) {\n      fetchImage(src).then((isImage) => {\n        if (isImage) {\n          setInner(\n              <ImageAvatar src={src} size={size} imageStyle={imageStyle} />,\n          );\n        }\n      });\n    }\n  }, []);\n\n  return (\n    <View style={[\n      generateBackgroundStyle(name, bgColor, bgColors),\n      getContainerStyle(size, src, borderRadius),\n      style]}\n    >\n      {inner}\n    </View>\n  );\n};\n\nUserAvatar.propTypes = {\n  name: PropTypes.string,\n  src: PropTypes.string,\n  bgColor: PropTypes.string,\n  bgColors: PropTypes.array,\n  textColor: PropTypes.string,\n  size: PropTypes.number,\n  imageStyle: PropTypes.object,\n  style: PropTypes.object,\n  borderRadius: PropTypes.number,\n  component: PropTypes.any,\n};\n\nUserAvatar.defaultProps = {\n  size: 32,\n  textColor: '#fff',\n  name: 'John Doe',\n  bgColors: [ // from https://flatuicolors.com/\n    '#2ecc71', // emerald\n    '#3498db', // peter river\n    '#8e44ad', // wisteria\n    '#e67e22', // carrot\n    '#e74c3c', // alizarin\n    '#1abc9c', // turquoise\n    '#2c3e50', // midnight blue\n  ],\n};\n\nexport default UserAvatar;\n"]}